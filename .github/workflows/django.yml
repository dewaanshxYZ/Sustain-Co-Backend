name: Django CI & CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Deploy to EC2
      env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_KEY: ${{ secrets.EC2_KEY }}
      run: |
          # Save the private key to a file
          echo "$EC2_KEY" > ec2-key.pem
          chmod 600 ec2-key.pem

          # Transfer the project files to the EC2 server
          scp -o StrictHostKeyChecking=no -i ec2-key.pem -r ./* $EC2_USER@$EC2_HOST:/home/ubuntu/backend/

          # SSH into the EC2 instance and perform the following steps
          ssh -o StrictHostKeyChecking=no -i ec2-key.pem $EC2_USER@$EC2_HOST << 'EOF'
          cd /home/ubuntu/backend

          # Install new npm packages if any
          pip install -r requirements.txt

          # Restart gunicorn and nginx
          sudo systemctl restart gunicorn
          sudo systemctl restart nginx

          # Remove key
          rm ec2-key.pem
          EOF

    # Step 5: Clean up
    - name: Clean up
      run: rm -f ec2-key.pem
